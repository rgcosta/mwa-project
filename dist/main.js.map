{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin-user-guard.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.component.scss","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/auth/token.storage.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/interceptors/header.interceptor.ts","webpack:///./src/app/interceptors/http-error.interceptor.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"app/admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\"\n\t],\n\t\"app/auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\"\n\t],\n\t\"app/home/home.module\": [\n\t\t\"./src/app/home/home.module.ts\",\n\t\t\"app-home-home-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AdminComponent } from './admin.component';\r\nimport { OnlyAdminUsersGuard } from './admin-user-guard';\r\n\r\nconst routes: Routes = [{\r\n  path: 'admin',\r\n  canActivate: [OnlyAdminUsersGuard],\r\n  children: [{\r\n    path: '',\r\n    component: AdminComponent,\r\n  }]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AdminRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from \"@angular/router\";\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable()\r\nexport class OnlyAdminUsersGuard implements CanActivate {\r\n  constructor() {}\r\n\r\n  canActivate() {\r\n    const user = (<any>window).user;\r\n    return user && user.isAdmin;\r\n  }\r\n}\r\n","module.exports = \"<h4>HELLO FROM ADMIN PAGE</h4>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit() {\r\n  }\r\n}\r\n\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport {AdminComponent} from './admin.component';\r\nimport {OnlyAdminUsersGuard} from './admin-user-guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n  ],\r\n  providers: [\r\n    OnlyAdminUsersGuard\r\n  ]})\r\nexport class AdminModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../auth/auth-guard.service';\r\n//import { HomeComponent } from '../home/home.component';\r\n\r\nconst routes: Routes = [{\r\n  path: 'home',\r\n  loadChildren: 'app/home/home.module#HomeModule'\r\n}, {\r\n  path: 'auth',\r\n  loadChildren: 'app/auth/auth.module#AuthModule'\r\n}, {\r\n  path: 'admin',\r\n  loadChildren: 'app/admin/admin.module#AdminModule'\r\n}, {\r\n  path: '**',\r\n  redirectTo: 'home'\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard],\r\n  declarations: []\r\n})\r\n\r\nexport class AppRoutingModule {}\r\n","module.exports = \"\\r\\n<app-header *ngIf=\\\"user\\\" [user]=\\\"user\\\"></app-header>\\r\\n\\r\\n<div class=\\\"wrapper-app container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n<footer>\\r\\n</footer>\\r\\n\\r\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { MatIconRegistry } from '@angular/material';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nimport { SetUserService } from './services/set-user.service';\r\nimport { MakeRequestService } from './services/make-request.service'\r\n\r\n\r\nimport { AuthService } from './auth/auth.service';\r\nimport * as schema from './schema/equipment.json';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  // Dummy Test\r\n  private userSubscription: Subscription;\r\n  public user: any;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private domSanitizer: DomSanitizer,\r\n    private matIconRegistry: MatIconRegistry\r\n  ) {\r\n    this.registerSvgIcons();\r\n\r\n  }\r\n\r\n  public ngOnInit() {\r\n\r\n    // init this.user on startup\r\n    this.authService.me().subscribe(data => {\r\n      this.user = data.user;\r\n    });\r\n\r\n    // update this.user after login/register/logout\r\n    this.userSubscription = this.authService.$userSource.subscribe((user) => {\r\n      this.user = user;\r\n    });\r\n    \r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.signOut();\r\n    this.navigate('');\r\n  }\r\n\r\n  navigate(link): void {\r\n    this.router.navigate([link]);\r\n  }\r\n\r\n  ngOnDestroy() { \r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  registerSvgIcons() {\r\n    [\r\n      'close',\r\n      'add',\r\n      'add-blue',\r\n      'airplane-front-view',\r\n      'air-station',\r\n      'balloon',\r\n      'boat',\r\n      'cargo-ship',\r\n      'car',\r\n      'catamaran',\r\n      'clone',\r\n      'convertible',\r\n      'delete',\r\n      'drone',\r\n      'fighter-plane',\r\n      'fire-truck',\r\n      'horseback-riding',\r\n      'motorcycle',\r\n      'railcar',\r\n      'railroad-train',\r\n      'rocket-boot',\r\n      'sailing-boat',\r\n      'segway',\r\n      'shuttle',\r\n      'space-shuttle',\r\n      'steam-engine',\r\n      'suv',\r\n      'tour-bus',\r\n      'tow-truck',\r\n      'transportation',\r\n      'trolleybus',\r\n      'water-transportation',\r\n    ].forEach((icon) => {\r\n      this.matIconRegistry.addSvgIcon(icon, this.domSanitizer.bypassSecurityTrustResourceUrl(`assets/icons/${icon}.svg`))\r\n    });\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { AuthHeaderInterceptor } from './interceptors/header.interceptor';\r\nimport { CatchErrorInterceptor } from './interceptors/http-error.interceptor';\r\n//import { HomeComponent } from './home/home.component';\r\n//import { HomeModule } from './home/home.module';\r\n\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    //HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n    SharedModule,\r\n    AuthModule,\r\n    AdminModule,\r\n    AppRoutingModule,\r\n    //HomeModule\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthHeaderInterceptor,\r\n    multi: true,\r\n  }, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: CatchErrorInterceptor,\r\n    multi: true,\r\n  }],\r\n  entryComponents: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(public router: Router) {}\r\n\r\n    canActivate() {\r\n      \r\n      const user = (<any>window).user;\r\n      if (user) return true;\r\n\r\n      // not logged in so redirect to login page with the return url\r\n      this.router.navigate(['/auth/login']);\r\n      return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\n\r\nconst routes: Routes = [{\r\n  path: 'auth',\r\n  children: [{\r\n    path: '',\r\n    redirectTo: '/auth/login',\r\n    pathMatch: 'full'\r\n  }, {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  }, {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  }]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AuthRoutingModule { }\r\n","module.exports = \".example-icon {\\n  padding: 0 14px; }\\n\\n.example-spacer {\\n  flex: 1 1 auto; }\\n\\n.example-card {\\n  width: 400px;\\n  margin: 10% auto; }\\n\\n.mat-card-title {\\n  font-size: 16px; }\\n\\n.card {\\n  margin: 20% auto;\\n  transition-duration: 0.4s; }\\n\\ninput {\\n  margin: 5px; }\\n\\n.invalid {\\n  color: red;\\n  font-size: 14px; }\\n\\nh1 {\\n  font-family: Georgia, 'Times New Roman', Times, serif;\\n  color: #b10606; }\\n\\n.btn {\\n  cursor: pointer; }\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AuthService } from './auth.service';\r\nimport { TokenStorage } from './token.storage';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AuthRoutingModule,\r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    TokenStorage\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { TokenStorage } from './token.storage';\r\nimport { TooltipComponent } from '@angular/material';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  constructor(private http : HttpClient, private token: TokenStorage) {}\r\n\r\n  public $userSource = new Subject<any>();\r\n\r\n  login(email : string, password : string) : Observable <any> {\r\n    return Observable.create(observer => {\r\n      this.http.post('/api/auth/login', {\r\n        email,\r\n        password\r\n      }).subscribe((data : any) => {\r\n          observer.next({user: data.user});\r\n          this.setUser(data.user);\r\n          this.token.saveToken(data.token);\r\n          observer.complete();\r\n      })\r\n    });\r\n  }\r\n\r\n  register(fullname : string, email : string, password : string, repeatPassword : string) : Observable <any> {    \r\n    return Observable.create(observer => {\r\n      this.http.post('/api/auth/register', {\r\n        fullname,\r\n        email,\r\n        password,\r\n        repeatPassword\r\n      }).subscribe((data : any) => {\r\n        observer.next({user: data.user});\r\n        this.setUser(data.user);\r\n        this.token.saveToken(data.token);\r\n        observer.complete();\r\n      })\r\n    });\r\n  }\r\n\r\n  setUser(user): void {\r\n    if (user) user.isAdmin = (user.roles.indexOf('admin') > -1);\r\n    this.$userSource.next(user);\r\n    (<any>window).user = user;\r\n    localStorage.setItem('user', (<any>window).user);\r\n  }\r\n\r\n  getUser(): Observable<any> {\r\n    return this.$userSource.asObservable();\r\n  }\r\n\r\n  me(): Observable<any> {\r\n    return Observable.create(observer => {\r\n      const tokenVal = this.token.getToken();\r\n      if (!tokenVal) return  observer.complete();\r\n      this.http.get('/api/auth/me').subscribe((data : any) => {\r\n        observer.next({user: data.user});\r\n        this.setUser(data.user);\r\n        observer.complete();\r\n      })\r\n    });\r\n  }\r\n\r\n  signOut(): void {\r\n    this.token.signOut();\r\n    this.setUser(null);\r\n    delete (<any>window).user;\r\n  }\r\n}\r\n","module.exports = \"<!--mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Login</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <form class=\\\"example-form\\\">\\r\\n      <table cellspacing=\\\"0\\\">\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\r\\n    <span>Don't have an account ? <a [routerLink]=\\\"['/auth/register']\\\" >register</a> here</span>\\r\\n  </mat-card-actions>\\r\\n</mat-card-->\\r\\n<div class=\\\"row \\\">\\r\\n  <div class=\\\"col-sm-12 col-md-8 offset-md-2\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <h1 class=\\\"card-title\\\"><b> Quora</b></h1>\\r\\n      </div>\\r\\n      <form class=\\\"example-form\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 col-md-6\\\">\\r\\n              <h5 class=\\\"text-muted\\\">Find answers and start asking here!</h5>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-md-6\\\">\\r\\n              <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\r\\n              <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\r\\n              <div align=\\\"right\\\">\\r\\n                <br>\\r\\n                <p class=\\\"card-text\\\">Don't have an account? <a [routerLink]=\\\"['/auth/register']\\\" >register here</a></p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer text-muted\\\" align=\\\"right\\\">\\r\\n          <span (click)=\\\"login()\\\" class=\\\"btn btn-primary\\\">Login <i class=\\\"fas fa-arrow-right\\\"></i></span>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {AuthService} from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['../auth.component.scss'],\r\n\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  email: string;\r\n  password: string;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login(): void {\r\n    this.authService.login(this.email, this.password)\r\n    .subscribe(data => {\r\n      this.router.navigate(['home']);\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Register</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <form class=\\\"example-form\\\">\\r\\n      <table cellspacing=\\\"0\\\" [formGroup]=\\\"userForm\\\">\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Fullname\\\" formControlName=\\\"fullname\\\" name=\\\"fullname\\\" required>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" name=\\\"email\\\" required>\\r\\n              <mat-error *ngIf=\\\"email.invalid && email.errors.email\\\">Invalid email address</mat-error>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Reapet Password\\\" formControlName=\\\"repeatPassword\\\" type=\\\"password\\\" name=\\\"repeatPassword\\\" required>\\r\\n              <mat-error *ngIf=\\\"repeatPassword.invalid && repeatPassword.errors.passwordMatch\\\">Password mismatch</mat-error>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-raised-button (click)=\\\"register()\\\" color=\\\"primary\\\">Register</button>\\r\\n    <span>Allrady have an account ? <a [routerLink]=\\\"['/auth/login']\\\">login</a> here</span>\\r\\n  </mat-card-actions>\\r\\n</mat-card-->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-8 col-lg-6 offset-md-2 offset-lg-3\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <h1 class=\\\"card-title\\\"><b>Sing up</b></h1>\\r\\n        </div>\\r\\n        <form class=\\\"example-form\\\" [formGroup]=\\\"userForm\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n\\r\\n            <input class=\\\"form-control\\\" placeholder=\\\"Fullname\\\" formControlName=\\\"fullname\\\" name=\\\"fullname\\\" required>\\r\\n            <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" name=\\\"email\\\" required>\\r\\n            <span class=\\\"invalid\\\" *ngIf=\\\"email.invalid && email.errors.email\\\"><i class=\\\"fas fa-exclamation-triangle\\\"></i> Invalid email address</span>\\r\\n            <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\r\\n            <input class=\\\"form-control\\\" placeholder=\\\"Reapet Password\\\" formControlName=\\\"repeatPassword\\\" type=\\\"password\\\" name=\\\"repeatPassword\\\" required>\\r\\n            <span class=\\\"invalid\\\" *ngIf=\\\"repeatPassword.invalid && repeatPassword.errors.passwordMatch\\\"><i class=\\\"fas fa-exclamation-triangle\\\"></i> Password mismatch</span>\\r\\n            <div align=\\\"right\\\">\\r\\n              <br>\\r\\n              <p class=\\\"card-text\\\">Allrady have an account? <a [routerLink]=\\\"['/auth/login']\\\">login here</a></p>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\" align=\\\"right\\\">\\r\\n            <span (click)=\\\"register()\\\" class=\\\"btn btn-primary\\\">Sign up</span>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\r\n\r\n\r\nimport {AuthService} from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['../auth.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  passwordsMatchValidator(control: FormControl): ValidationErrors {\r\n    let password = control.root.get('password');\r\n    return password && control.value !== password.value ? {\r\n      passwordMatch: true\r\n    }: null;\r\n  }\r\n\r\n  userForm = new FormGroup({\r\n    fullname: new FormControl('', [Validators.required]),\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required]),\r\n    repeatPassword: new FormControl('', [Validators.required, this.passwordsMatchValidator])\r\n  })\r\n\r\n  get fullname(): any { return this.userForm.get('fullname'); }\r\n  get email(): any { return this.userForm.get('email'); }\r\n  get password(): any { return this.userForm.get('password'); }\r\n  get repeatPassword(): any { return this.userForm.get('repeatPassword'); }\r\n\r\n  register() {\r\n\r\n    if(!this.userForm.valid) return;\r\n\r\n    let {\r\n      fullname,\r\n      email,\r\n      password,\r\n      repeatPassword\r\n    } = this.userForm.getRawValue();\r\n\r\n    this.authService.register(fullname, email, password, repeatPassword)\r\n    .subscribe(data => {\r\n      this.router.navigate(['home']);\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\nconst TOKEN_KEY = 'AuthToken';\r\n\r\n@Injectable()\r\nexport class TokenStorage {\r\n\r\n  constructor() { }\r\n\r\n  signOut() {\r\n    window.localStorage.removeItem(TOKEN_KEY);\r\n    window.localStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    if (!token) return;\r\n    window.localStorage.removeItem(TOKEN_KEY);\r\n    window.localStorage.setItem(TOKEN_KEY,  token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n  }\r\n}","module.exports = \"\\r\\n<header>\\r\\n    <nav *ngIf=\\\"user\\\" class=\\\"navbar navbar-expand-lg navbar-light bg-light justify-content-between\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\" >\\r\\n                <h1 class=\\\"card-title title\\\"><b> Quora</b></h1>\\r\\n            </a>\\r\\n            <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n            <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n                <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n                    <li class=\\\"nav-item active\\\">\\r\\n                        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\"><i class=\\\"fas fa-user-friends\\\"></i> OurTeam</a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n                <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n                    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search Question\\\" aria-label=\\\"Search\\\">\\r\\n                    <button class=\\\"btn btn-light\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                </form>\\r\\n                \\r\\n                <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n                        <span class=\\\"nav-link\\\">{{user.fullname}}</span>&nbsp;\\r\\n                    <li class=\\\"avatar-profile d-none d-sm-block \\\">\\r\\n                        <a class=\\\"dropdown-toggle\\\"  data-toggle=\\\"dropdown\\\" >\\r\\n                            <i class=\\\"fas fa-user-circle text-muted\\\" style=\\\"font-size: 42px;\\\"></i>\\r\\n                        </a>\\r\\n                        <div class=\\\"nav navbar-nav\\\">\\r\\n                            <div class=\\\"dropdown\\\">\\r\\n                                <div class=\\\"dropdown-menu\\\">\\r\\n                                    <a href=\\\"#\\\" class=\\\"dropdown-item\\\"><i class=\\\"far fa-user-circle\\\"></i> Profile</a>\\r\\n                                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                                    <a (click)=\\\"logout()\\\" class=\\\"dropdown-item out\\\"><i class=\\\"fas fa-sign-out-alt\\\"></i> Sign Out</a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        &nbsp;\\r\\n                        &nbsp;\\r\\n                        \\r\\n                    </li>\\r\\n                </ul>\\r\\n                <a href=\\\"#\\\" id=\\\"add-question\\\" class=\\\"btn btn-sm btn-outline-success\\\">Add Question</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\"","module.exports = \"header1 {\\n  width: 100%; }\\n  header1 .logo1 {\\n    background-image: url('logo.png');\\n    width: 50px;\\n    height: 50px;\\n    background-size: contain;\\n    background-repeat: no-repeat; }\\n  header1 .example-spacer1 {\\n    flex: 1 1 auto; }\\n  header1 .links1 {\\n    color: white;\\n    font-family: 'Helvetica Neue', sans-serif;\\n    font-size: 15px;\\n    font-weight: initial;\\n    letter-spacing: -1px;\\n    line-height: 1;\\n    text-align: center;\\n    padding: 15px; }\\n  header1 .links1.side {\\n      padding: 0 14px; }\\n  header1 .mat-toolbar1 {\\n    background: black; }\\n  header1 .mat-icon1 {\\n    vertical-align: middle;\\n    margin: 0 5px; }\\n  header1 a1 {\\n    cursor: pointer; }\\n  a {\\n  cursor: pointer; }\\n  a.out {\\n  color: #961414; }\\n  img.userpic {\\n  border-radius: 22px;\\n  width: 45px;\\n  height: 45px; }\\n  img {\\n  width: 45px;\\n  height: 45px; }\\n  .title {\\n  font-family: Georgia, 'Times New Roman', Times, serif;\\n  color: #b10606; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { useAnimation } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Input() user: any = {};\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.user);\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.signOut();\r\n    this.navigate('/auth/login');\r\n  }\r\n\r\n  navigate(link): void {\r\n    this.router.navigate([link]);\r\n  }\r\n\r\n}\r\n","import {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {TokenStorage} from '../auth/token.storage';\r\n\r\nexport class AuthHeaderInterceptor implements HttpInterceptor {\r\n\tintercept(req : HttpRequest <any>, next : HttpHandler) : Observable <HttpEvent<any>> {\r\n\t\t\t// Clone the request to add the new header\r\n      const token = new TokenStorage();\r\n      const tokenVal = token.getToken();\r\n\t\t\tconst clonedRequest = req.clone({\r\n\t\t\theaders: req\r\n\t\t\t\t.headers\r\n\t\t\t\t.set('Authorization', tokenVal ? `Bearer ${ tokenVal}` : '')\r\n\t\t});\r\n\r\n\t\t// Pass the cloned request instead of the original request to the next handle\r\n\t\treturn next.handle(clonedRequest);\r\n\t}\r\n}","import {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\nimport 'rxjs/add/operator/do';\r\n\r\nexport class CatchErrorInterceptor implements HttpInterceptor {\r\n  intercept(request : HttpRequest < any >, next : HttpHandler) : Observable < HttpEvent < any >> {\r\n\r\n    return next\r\n      .handle(request)\r\n      .do \r\n        ((event : HttpEvent < any >) => {}, (err : any) => {\r\n          if (err instanceof HttpErrorResponse) {\r\n            let text = (err.error && err.error.message) ? err.error.message : err.statusText;\r\n            (<any>window).globalEvents.emit('open error dialog', text);\r\n          }\r\n        });\r\n\r\n      }\r\n  }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport {\r\n  MatToolbarModule,\r\n  MatMenuModule,\r\n  MatTabsModule,\r\n  MatDividerModule,\r\n  MatCardModule,\r\n  MatListModule,\r\n  MatExpansionModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatDialogModule,\r\n  MatInputModule,\r\n  MatSnackBarModule,\r\n  MatSidenavModule,\r\n  MatTreeModule,\r\n  MatProgressBarModule,\r\n  MatFormFieldModule,\r\n  MatSelectModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatTabsModule,\r\n    MatDividerModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSidenavModule,\r\n    MatTreeModule,\r\n    MatProgressBarModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FlexLayoutModule,\r\n  ],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatTabsModule,\r\n    MatDividerModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSidenavModule,\r\n    MatTreeModule,\r\n    MatProgressBarModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FlexLayoutModule,\r\n  ],\r\n  declarations: [],\r\n})\r\nexport class SharedModule { }\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}